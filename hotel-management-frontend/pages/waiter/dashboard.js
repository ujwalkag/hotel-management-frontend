import { useState, useEffect } from 'react';
import { useAuth } from '@/context/AuthContext';
import WaiterLayout from '@/components/layouts/WaiterLayout';
import withRoleGuard from '@/hoc/withRoleGuard';
import Link from 'next/link';
import toast from 'react-hot-toast';
import { useLanguage } from "@/context/LanguageContext";
import {
    AdvanceBookingNotificationBanner,
    WaiterAdvanceBookingWidget
} from '@/components/AdvanceBookingWidgets';


function WaiterDashboard() {
    const { user, makeAuthenticatedRequest } = useAuth();
    const { language } = useLanguage();
    const [dashboardData, setDashboardData] = useState({
        myTables: [],
        todayOrders: 0,
        pendingOrders: 0,
        completedOrders: 0,
        totalEarnings: 0
    });
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        loadDashboardData();
        // Refresh every 30 seconds
        const interval = setInterval(loadDashboardData, 30000);
        return () => clearInterval(interval);
    }, []);

    const loadDashboardData = async () => {
        try {
            setLoading(true);
            const [tablesRes, statsRes] = await Promise.all([
                makeAuthenticatedRequest('/api/restaurant/tables/with_orders/'),
                makeAuthenticatedRequest('/api/restaurant/dashboard-stats/')
            ]);

            if (tablesRes && tablesRes.ok) {
                const tablesData = await tablesRes.json();
                // Filter tables that have orders created by this waiter or are currently occupied
                // Safe parsing with fallbacks
                const tablesArray = tablesData?.tables || tablesData || [];
                const myTables = Array.isArray(tablesArray) ? tablesArray.filter(table =>
                    table?.status === 'occupied' ||
                    (table?.active_orders && Array.isArray(table.active_orders) &&
                        table.active_orders.some(order =>
                            order?.created_by_name === user?.get_full_name?.() ||
                            order?.created_by_name === user?.email
                        ))
                ) : [];
                ;

                setDashboardData(prev => ({
                    ...prev,
                    myTables: myTables
                }));
            }

            if (statsRes && statsRes.ok) {
                const statsData = await statsRes.json();
                setDashboardData(prev => ({
                    ...prev,
                    todayOrders: statsData.orders?.total_today || 0,
                    pendingOrders: statsData.orders?.pending || 0,
                    completedOrders: statsData.orders?.ready || 0
                }));
            }
        } catch (error) {
            console.error('Error loading dashboard data:', error);
            toast.error('Failed to load dashboard data');
        } finally {
            setLoading(false);
        }
    };

    const getGreeting = () => {
        const hour = new Date().getHours();
        if (language === "hi") {
            if (hour < 12) return '‡§∏‡•Å‡§™‡•ç‡§∞‡§≠‡§æ‡§§';
            if (hour < 17) return '‡§®‡§Æ‡§∏‡•ç‡§ï‡§æ‡§∞';
            return '‡§∂‡•Å‡§≠ ‡§∏‡§Ç‡§ß‡•ç‡§Ø‡§æ';
        } else {
            if (hour < 12) return 'Good Morning';
            if (hour < 17) return 'Good Afternoon';
            return 'Good Evening';
        }
    };

    const getTableStatusIcon = (status) => {
        const icons = {
            free: '‚úÖ',
            occupied: 'üë•',
            reserved: 'üìÖ',
            cleaning: 'üßπ',
            maintenance: 'üîß'
        };
        return icons[status] || '‚ùì';
    };

    if (loading) {
        return (
            <WaiterLayout>
                <div className="flex items-center justify-center min-h-96">
                    <div className="text-center">
                        <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-purple-600 mx-auto"></div>
                        <p className="mt-4 text-gray-600">Loading your dashboard...</p>
                    </div>
                </div>
            </WaiterLayout>
        );
    }

    return (
        <WaiterLayout>
            <div className="space-y-6">
                {/* Welcome Header with HOME BUTTON */}
                <div className="bg-gradient-to-r from-purple-600 to-blue-600 text-white p-6 rounded-lg mb-6">
                    <div className="flex justify-between items-center">
                        <div>
                            <h1 className="text-3xl font-bold mb-2">
                                {getGreeting()}, {user?.first_name || user?.email?.split('@')[0] || 'Waiter'}! üëã
                            </h1>
                            <p className="text-purple-100">
                                {language === "hi"
                                    ? "‡§â‡§§‡•ç‡§ï‡•É‡§∑‡•ç‡§ü‡§§‡§æ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ö‡§§‡§ø‡§•‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡•á‡§µ‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞"
                                    : "Ready to serve guests with excellence"
                                }
                            </p>
                        </div>

                        <div className="flex gap-2">
                            <Link
                                href="/waiter/dashboard"
                                className="bg-white bg-opacity-20 hover:bg-opacity-30 px-4 py-2 rounded-lg flex items-center text-sm font-bold transition-all"
                            >
                                üè† {language === "hi" ? "‡§π‡•ã‡§Æ" : "HOME"}
                            </Link>
                            <div className="bg-white bg-opacity-20 px-4 py-2 rounded-lg flex items-center">
                                üë®‚Äçüç≥
                            </div>
                        </div>
                    </div>
                </div>


                {/* Quick Stats */}
                <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
                    <div className="bg-white p-4 rounded-lg shadow-sm border">
                        <div className="flex items-center justify-between">
                            <div>
                                <p className="text-sm text-gray-600">
                                    {language === "hi" ? "‡§Æ‡•á‡§∞‡•Ä ‡§ü‡•á‡§¨‡§≤" : "My Tables"}
                                </p>
                                <p className="text-2xl font-bold text-purple-600">
                                    {dashboardData.myTables.length}
                                </p>
                            </div>
                            <div className="text-purple-500 text-2xl">ü™ë</div>
                        </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg shadow-sm border">
                        <div className="flex items-center justify-between">
                            <div>
                                <p className="text-sm text-gray-600">
                                    {language === "hi" ? "‡§Ü‡§ú ‡§ï‡•á ‡§ë‡§∞‡•ç‡§°‡§∞" : "Today's Orders"}
                                </p>
                                <p className="text-2xl font-bold text-blue-600">
                                    {dashboardData.todayOrders}
                                </p>
                            </div>
                            <div className="text-blue-500 text-2xl">üìù</div>
                        </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg shadow-sm border">
                        <div className="flex items-center justify-between">
                            <div>
                                <p className="text-sm text-gray-600">
                                    {language === "hi" ? "‡§≤‡§Ç‡§¨‡§ø‡§§ ‡§ë‡§∞‡•ç‡§°‡§∞" : "Pending Orders"}
                                </p>
                                <p className="text-2xl font-bold text-yellow-600">
                                    {dashboardData.pendingOrders}
                                </p>
                            </div>
                            <div className="text-yellow-500 text-2xl">‚è≥</div>
                        </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg shadow-sm border">
                        <div className="flex items-center justify-between">
                            <div>
                                <p className="text-sm text-gray-600">
                                    {language === "hi" ? "‡§§‡•à‡§Ø‡§æ‡§∞ ‡§ë‡§∞‡•ç‡§°‡§∞" : "Ready Orders"}
                                </p>
                                <p className="text-2xl font-bold text-green-600">
                                    {dashboardData.completedOrders}
                                </p>
                            </div>
                            <div className="text-green-500 text-2xl">‚úÖ</div>
                        </div>
                    </div>
                </div>


                <div className="bg-white rounded-lg p-6 shadow-md border-l-4 border-green-500">
                    <div className="flex items-center">
                        <div className="text-2xl text-green-600 mr-4">üìù</div>
                        <div>
                            <AdvanceBookingNotificationBanner />
                            <WaiterAdvanceBookingWidget />
                        </div>
                    </div>
                </div>



                {/* Quick Actions with HOME ACCESS */}
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
                    <Link href="/waiter/dashboard">
                        <div className="bg-white p-6 rounded-lg shadow-sm border hover:shadow-md transition-shadow cursor-pointer">
                            <div className="text-3xl mb-3">üè†</div>
                            <h3 className="font-semibold text-lg mb-2">
                                {language === "hi" ? "‡§π‡•ã‡§Æ ‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°" : "HOME Dashboard"}
                            </h3>
                            <p className="text-gray-600 text-sm">
                                {language === "hi" ? "‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§° ‡§™‡§∞ ‡§µ‡§æ‡§™‡§∏ ‡§ú‡§æ‡§è‡§Ç" : "Return to main dashboard"}
                            </p>
                        </div>
                    </Link>

                    <Link href="/waiter/take-orders">
                        <div className="bg-white p-6 rounded-lg shadow-sm border hover:shadow-md transition-shadow cursor-pointer">
                            <div className="text-3xl mb-3">üìù</div>
                            <h3 className="font-semibold text-lg mb-2">
                                {language === "hi" ? "‡§®‡§Ø‡§æ ‡§ë‡§∞‡•ç‡§°‡§∞ ‡§≤‡•á‡§Ç" : "Take New Order"}
                            </h3>
                            <p className="text-gray-600 text-sm">
                                {language === "hi" ? "‡§Ö‡§™‡§®‡•Ä ‡§ü‡•á‡§¨‡§≤ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ë‡§∞‡•ç‡§°‡§∞ ‡§≤‡•á‡§®‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç" : "Start taking orders for your tables"}
                            </p>
                        </div>
                    </Link>

                    <Link href="/waiter/my-tables">
                        <div className="bg-white p-6 rounded-lg shadow-sm border hover:shadow-md transition-shadow cursor-pointer">
                            <div className="text-3xl mb-3">ü™ë</div>
                            <h3 className="font-semibold text-lg mb-2">
                                {language === "hi" ? "‡§Æ‡•á‡§∞‡•Ä ‡§ü‡•á‡§¨‡§≤ ‡§¶‡•á‡§ñ‡•á‡§Ç" : "View My Tables"}
                            </h3>
                            <p className="text-gray-600 text-sm">
                                {language === "hi" ? "‡§Ö‡§™‡§®‡•Ä ‡§Ö‡§∏‡§æ‡§á‡§® ‡§ï‡•Ä ‡§ó‡§à ‡§ü‡•á‡§¨‡§≤ ‡§ï‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§ú‡§æ‡§Ç‡§ö‡•á‡§Ç" : "Check status of your assigned tables"}
                            </p>
                        </div>
                    </Link>

                    <Link href="/waiter/order-status">
                        <div className="bg-white p-6 rounded-lg shadow-sm border hover:shadow-md transition-shadow cursor-pointer">
                            <div className="text-3xl mb-3">üìã</div>
                            <h3 className="font-semibold text-lg mb-2">
                                {language === "hi" ? "‡§ë‡§∞‡•ç‡§°‡§∞ ‡§∏‡•ç‡§•‡§ø‡§§‡§ø" : "Order Status"}
                            </h3>
                            <p className="text-gray-600 text-sm">
                                {language === "hi" ? "‡§Ö‡§™‡§®‡•á ‡§ë‡§∞‡•ç‡§°‡§∞ ‡§î‡§∞ ‡§Ö‡§™‡§°‡•á‡§ü ‡§ü‡•ç‡§∞‡•à‡§ï ‡§ï‡§∞‡•á‡§Ç" : "Track your orders and updates"}
                            </p>
                        </div>
                    </Link>
                </div>


                {/* My Tables Overview with HOME NAVIGATION */}
                <div className="bg-white rounded-lg p-6 shadow-sm border">
                    <div className="flex justify-between items-center mb-4">
                        <h2 className="text-xl font-bold">
                            {language === "hi" ? "‡§Æ‡•á‡§∞‡•Ä ‡§ü‡•á‡§¨‡§≤ ‡§ï‡§æ ‡§Ö‡§µ‡§≤‡•ã‡§ï‡§®" : "My Tables Overview"}
                        </h2>
                        <div className="flex gap-2">
                            <Link
                                href="/waiter/dashboard"
                                className="text-purple-600 hover:text-purple-800 text-sm font-medium bg-purple-50 px-3 py-1 rounded-full"
                            >
                                üè† {language === "hi" ? "‡§π‡•ã‡§Æ" : "HOME"}
                            </Link>
                            <Link
                                href="/waiter/my-tables"
                                className="text-purple-600 hover:text-purple-800 text-sm font-medium"
                            >
                                {language === "hi" ? "‡§∏‡§≠‡•Ä ‡§¶‡•á‡§ñ‡•á‡§Ç ‚Üí" : "View All ‚Üí"}
                            </Link>
                        </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                        {dashboardData.myTables.length === 0 ? (
                            <div className="col-span-full text-center py-8">
                                <div className="text-4xl mb-4">ü™ë</div>
                                <h3 className="text-lg font-semibold mb-2">
                                    {language === "hi" ? "‡§ï‡•ã‡§à ‡§ü‡•á‡§¨‡§≤ ‡§Ö‡§∏‡§æ‡§á‡§® ‡§®‡§π‡•Ä‡§Ç" : "No Tables Assigned"}
                                </h3>
                                <p className="text-gray-600 mb-4">
                                    {language === "hi"
                                        ? "‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•ã‡§à ‡§ü‡•á‡§¨‡§≤ ‡§Ö‡§∏‡§æ‡§á‡§® ‡§Ø‡§æ occupied ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡•§"
                                        : "You don't have any tables currently assigned or occupied."
                                    }
                                </p>
                                <div className="flex justify-center gap-3">
                                    <Link
                                        href="/waiter/dashboard"
                                        className="inline-flex items-center px-4 py-2 border border-purple-300 text-sm font-medium rounded-md text-purple-700 bg-white hover:bg-purple-50"
                                    >
                                        üè† {language === "hi" ? "‡§π‡•ã‡§Æ" : "HOME"}
                                    </Link>
                                    <Link
                                        href="/waiter/take-orders"
                                        className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-purple-600 hover:bg-purple-700"
                                    >
                                        {language === "hi" ? "‡§ë‡§∞‡•ç‡§°‡§∞ ‡§≤‡•á‡§®‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç" : "Start Taking Orders"}
                                    </Link>
                                </div>
                            </div>
                        ) : (
                            dashboardData.myTables.slice(0, 6).map(table => (
                                <div key={table.id} className="border rounded-lg p-4 hover:shadow-md transition-shadow">
                                    <div className="flex justify-between items-start mb-3">
                                        <h3 className="font-semibold text-lg">
                                            {language === "hi" ? `‡§ü‡•á‡§¨‡§≤ ${table.table_number}` : `Table ${table.table_number}`}
                                        </h3>
                                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${table.active_orders_count > 0 ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800'
                                            }`}>
                                            {getTableStatusIcon(table.status)} {
                                                language === "hi" ? (
                                                    table.status === 'free' ? '‡§Æ‡•Å‡§ï‡•ç‡§§' :
                                                        table.status === 'occupied' ? '‡§µ‡•ç‡§Ø‡§∏‡•ç‡§§' :
                                                            table.status === 'reserved' ? '‡§Ü‡§∞‡§ï‡•ç‡§∑‡§ø‡§§' :
                                                                table.status === 'cleaning' ? '‡§∏‡§´‡§æ‡§à' :
                                                                    table.status === 'maintenance' ? '‡§∞‡§ñ‡§∞‡§ñ‡§æ‡§µ' : table.status
                                                ) : table.status
                                            }
                                        </span>
                                    </div>

                                    <div className="space-y-2 text-sm text-gray-600">
                                        <div className="flex justify-between">
                                            <span>{language === "hi" ? "‡§ï‡•ç‡§∑‡§Æ‡§§‡§æ:" : "Capacity:"}</span>
                                            <span>{table.capacity} {language === "hi" ? "‡§≤‡•ã‡§ó" : "people"}</span>
                                        </div>
                                        <div className="flex justify-between">
                                            <span>{language === "hi" ? "‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§ë‡§∞‡•ç‡§°‡§∞:" : "Active Orders:"}</span>
                                            <span>{table.active_orders_count || 0}</span>
                                        </div>
                                        {table.total_bill_amount > 0 && (
                                            <div className="flex justify-between">
                                                <span>{language === "hi" ? "‡§¨‡§ø‡§≤ ‡§∞‡§æ‡§∂‡§ø:" : "Bill Amount:"}</span>
                                                <span className="font-semibold">‚Çπ{table.total_bill_amount.toFixed(2)}</span>
                                            </div>
                                        )}
                                    </div>

                                    <div className="mt-4">
                                        <Link
                                            href={`/waiter/take-orders?table=${table.id}`}
                                            className="w-full bg-purple-600 hover:bg-purple-700 text-white px-3 py-2 rounded text-sm text-center block transition-colors"
                                        >
                                            {language === "hi" ? "‡§ë‡§∞‡•ç‡§°‡§∞ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç" : "Add Order"}
                                        </Link>
                                    </div>
                                </div>
                            ))
                        )}
                    </div>
                </div>
            </div>
        </WaiterLayout>
    );
}

export default withRoleGuard(WaiterDashboard, ['waiter']);
